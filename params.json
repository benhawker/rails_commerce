{"name":"Railscommerce","tagline":"Online shop application written on ruby on rails","body":"#RailsCommerce [![Build Status](https://travis-ci.org/pavel-d/RailsCommerce.png?branch=master)](https://travis-ci.org/pavel-d/RailsCommerce) [![Code Climate](https://codeclimate.com/github/pavel-d/RailsCommerce.png)](https://codeclimate.com/github/pavel-d/RailsCommerce)\r\n\r\n**RailsCommerce** is a ruby app for e-commerce\r\n\r\n\r\n[Screenshots](https://github.com/pavel-d/RailsCommerce/wiki/Screenshots)\r\n\r\n#Description\r\n\r\nRailsCommerce has following features:\r\n\r\n- **Admin panel**\r\n  - **Dashboard**. Shows recent orders, unfulfilled orders count and order updates\r\n  - **Orders tool**. Review order info, manage order's shipment and invoice status, post comments, notify customers about order\r\n  - **Products management tool**. \r\n  - **Categories management tool**.\r\n  - **Brands management tool**.\r\n- **Store**\r\n  - **Browse** products\r\n  - **Search** products by keywords\r\n  - **Filter** products by attributes\r\n- **Checkout**\r\n  - **Add to cart** button with ajax cart\r\n  - **Simple** checkout for signed in/ not signed in\r\n  - **Account creation** for new customers during checkout\r\n  - **Email notifications**\r\n- **Static pages**\r\n\r\nComes with clean `Bootstrap` based design\r\n\r\nRailsCommerce uses `Devise` for authentication, `paperclip` for images upload.\r\n\r\n#Setup\r\n\r\n\r\n* Ruby with RVM\r\n\r\n```\r\n\\curl -sSL https://get.rvm.io | bash -s stable\r\nsource $HOME/.rvm/scripts/rvm\r\nrvm install 2.1.2\r\n```\r\n\r\n* System dependencies\r\n\r\nImageMagic needed for images converting, Redis for `resque`, libpq-dev - for `pg` gem.\r\n```\r\nsudo apt-get update\r\nsudo apt-get install imagemagick redis-server libpq-dev\r\n```\r\n\r\n* Clone and run\r\n```\r\ngit clone git@github.com:pavel-d/RailsCommerce.git\r\nbundle install\r\n\r\nrake db:migrate\r\nrails server\r\n```\r\n\r\n\r\n\r\n* Database creation\r\n\r\n```\r\nrake db:setup\r\n```\r\n\r\nThere is no admin user by default, so you need to update any existing user to give him admin rights\r\n\r\n```\r\nrails console\r\n2.1.0 :001 > User.find_by_email('paul@live.ru').update(admin: true)\r\n```\r\n\r\n* Database initialization\r\n\r\nYou may want to create a DB with fake products\r\n```\r\nrake db:demo\r\n```\r\n\r\n* How to run the test suite\r\n\r\n```\r\nrspec\r\n```\r\n\r\n* Deployment instructions\r\n\r\nThere is a built in [capistrano](https://github.com/pavel-d/RailsCommerce/blob/master/config/deploy.rb) script for deployment, so deploying to production is simple:\r\n\r\n```\r\ncap production deploy\r\n```\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}